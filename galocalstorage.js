// Generated by CoffeeScript 1.4.0

(function() {
  var IS_DEBUG, ga_storage, localStorage, version,
    _this = this;
  version = '1.0';
  IS_DEBUG = false;
  localStorage = function(key, initial_value) {
    if (window.localStorage.getItem(key) === null && initial_value !== null) {
      window.localStorage.setItem(key, initial_value);
    }
    this._get = function() {
      return window.localStorage.getItem(key);
    };
    this._set = function() {
      return window.localStorage.setItem(key, value);
    };
    this._remove = function() {
      return window.localStorage.removeItem(key);
    };
    return this.toString = function() {
      return this._get();
    };
  };
  return ga_storage = function() {
    var beacon_url, c_session, custom_vars, event_map, f_session, gainit, generate_query_string, get_random, initialized, l_session, last_nav_url, last_page_title, last_url, rand, request_cnt, reset_session, return_cookies, session_cnt, tracking_code_url, uid, uid_rand, utmac, utmcs, utmdt, utmhid, utmhn, utmt, utmwv, utul, visitor_custom_vars;
    initialized = false;
    tracking_code_url = 'http://www.google-analytics.com/ga.js';
    beacon_url = 'http://www.google-analytics.com/__utm.gif';
    last_url = '/';
    last_nav_url = '/';
    last_page_title = '-';
    utmac = false;
    utmhn = false;
    utmwv = '4.3';
    utmcs = 'UTF-8';
    utul = 'en-us';
    utmdt = '-';
    utmt = 'event';
    utmhid = 0;
    event_map = {
      hidden: {
        path: '/popup_hidden',
        event: 'PopupHidden'
      },
      blurred: {
        path: '/popup_blurred',
        event: 'PopupBlurred'
      },
      focused: {
        path: '{last_nav_url}',
        event: 'PopupFocused'
      }
    };
    uid = new LocalStorage('ga_storage_uid');
    uid_rand = new LocalStorage('ga_stored_uid_rand');
    session_cnt = new LocalStorage('ga_storage_session_cnt');
    f_session = new LocalStorage('ga_storage_f_session');
    l_session = new LocalStorage('ga_storage_l_session');
    visitor_custom_vars = new LocalStorage('ga_storage_visitor_custom_vars');
    c_session = 0;
    custom_vars = visitor_custom_vars._get() ? JSON.parse(visitor_custom_vars._get()) : ['dummy'];
    request_cnt = 0;
    rand = function(min, max) {
      return min + Math.floor(Math.random() * (max - min));
    };
    get_random = function() {
      return rand(10000000, 99999999);
    };
    return_cookies = function(source, mediu, campaign) {
      var cookie, medium, ret;
      source = source || '(direct)';
      medium = medium || '(none)';
      campaign = campaign || '(direct)';
      cookie = uid._get();
      ret = '__utma=' + cookie + '.' + uid_rand._get() + '.' + f_session._get() + '.' + l_session._get() + '.' + c_session + '.' + session_cnt._get() + ';';
      ret += '+__utmz=' + cookie + '.' + c_session + '.1.1.utmcsr=' + source + '|utmccn=' + campaign + '|utmcmd=' + medium + ';';
      ret += '+__utmc=' + cookie + ';';
      ret += '+__utmb=' + cookie + '.' + request_cnt + '.10.' + c_session + ';';
      return ret;
    };
    generate_query_string = function(params) {
      var key, qa;
      qa = [];
      for (key in params) {
        qa.push(key + '=' + encodeURIComponent(params[key]));
      }
      return '?' + qa.join('&');
    };
    reset_session = function(c_session) {
      if (IS_DEBUG) {
        console.log('resetting session');
      }
      l_session._set(c_session);
      request_cnt = 0;
      return utmhid = get_random();
    };
    gainit = function() {
      c_session = (new Date()).getTime();
      if (IS_DEBUG) {
        console.log('gainit', c_session);
      }
      request_cnt = 0;
      utmhid = get_random();
      if (uid._get() === null) {
        uid._set(rand(10000000, 99999999));
        uid_rand._set(rand(1000000000, 2147483647));
      }
      if (session_cnt._get() === null) {
        session_cnt._set(1);
      } else {
        session_cnt._set(parseInt(session_cnt._get()) + 1);
      }
      if (f_session._get() === null) {
        f_session._set(c_session);
      }
      if (l_session._get() === null) {
        return l_session._set(c_session);
      }
    };
    _this._setAccount = function(account_id) {
      if (IS_DEBUG) {
        console.log(account_id);
      }
      utmac = account_id;
      return gainit();
    };
    _this._setDomain = function(domain) {
      if (IS_DEBUG) {
        console.log(domain);
      }
      return utmhn = domain;
    };
    return _this._setLocale = function(lng, country) {
      return lng = typeof lng === 'string' && lng.match;
    };
  };
})();
